{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/Table.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function Table() {\n  // Declare the petition for data from the server using the \"axios\" package for easier promises.\n  const [bundles, setBundle] = useState([]); // Declaring the const for getting data\n\n  const getData = async () => {\n    let url = 'http://localhost:8000/api/bundle/getBundles';\n    const response = await axios.get(url);\n    console.log('response', response);\n    setBundle(response.data);\n  }; // Execute get the data.\n\n\n  useEffect(() => {\n    getData();\n  }, []); // Function to build the header of the table. To add more rows, simply add them on headerElements. \n  // Rows are transformed to Upper Case for stlying.\n  // Paramteres: None.\n  //\n  // Returns: HTML table header.\n\n  const renderHeader = () => {\n    let headerElement = ['name', 'bundle'];\n    return headerElement.map((key, index) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }\n      }, key.toUpperCase());\n    });\n  }; // Function to build the table. Uses the bundles variable that contains the bundle data from DB. Add valid rows to .map() for more table cells. \n  // Paramteres: None, but uses bundles variable.\n  //\n  // Returns: HTML table.\n\n\n  const renderBody = () => {\n    return bundles && bundles.map(({\n      id,\n      name,\n      bundle\n    }) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, bundle));\n    });\n  }; // Return the table. Table building.\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"bundlesdiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Bundles Table\"), /*#__PURE__*/React.createElement(\"table\", {\n    id: \"bundles\",\n    class: \"striped centered responsive-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, renderHeader())), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, renderBody())));\n}","map":{"version":3,"sources":["/usr/src/app/src/Table.js"],"names":["React","useState","useEffect","axios","Table","bundles","setBundle","getData","url","response","get","console","log","data","renderHeader","headerElement","map","key","index","toUpperCase","renderBody","id","name","bundle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC5B;AACA,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBL,QAAQ,CAAC,EAAD,CAArC,CAF4B,CAG5B;;AACA,QAAMM,OAAO,GAAG,YAAY;AACxB,QAAIC,GAAG,GAAG,6CAAV;AACA,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUF,GAAV,CAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAH,IAAAA,SAAS,CAACG,QAAQ,CAACI,IAAV,CAAT;AACH,GALD,CAJ4B,CAU5B;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT,CAX4B,CAe5B;AACA;AACA;AACA;AACA;;AACA,QAAMO,YAAY,GAAG,MAAM;AACvB,QAAIC,aAAa,GAAG,CAAC,MAAD,EAAS,QAAT,CAApB;AAEA,WAAOA,aAAa,CAACC,GAAd,CAAkB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrC,0BAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBD,GAAG,CAACE,WAAJ,EAAjB,CAAP;AACH,KAFM,CAAP;AAGH,GAND,CApB4B,CA4B5B;AACA;AACA;AACA;;;AACA,QAAMC,UAAU,GAAG,MAAM;AACrB,WAAOf,OAAO,IAAIA,OAAO,CAACW,GAAR,CAAY,CAAC;AAAEK,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KAAD,KAA0B;AACpD,0BACI;AAAI,QAAA,GAAG,EAAEF,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,IAAL,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,MAAL,CAFJ,CADJ;AAMH,KAPiB,CAAlB;AAQH,GATD,CAhC4B,CA2C5B;;;AACA,sBACI;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAO,IAAA,EAAE,EAAC,SAAV;AAAoB,IAAA,KAAK,EAAC,mCAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,YAAY,EAAjB,CADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,UAAU,EADf,CAJJ,CAFJ,CADJ;AAaC","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nexport default function Table() {\n    // Declare the petition for data from the server using the \"axios\" package for easier promises.\n    const [bundles, setBundle] = useState([])\n    // Declaring the const for getting data\n    const getData = async () => {\n        let url = 'http://localhost:8000/api/bundle/getBundles';\n        const response = await axios.get(url);\n        console.log('response', response);\n        setBundle(response.data);\n    }\n    // Execute get the data.\n    useEffect(() => {\n        getData()\n    }, [])\n\n    // Function to build the header of the table. To add more rows, simply add them on headerElements. \n    // Rows are transformed to Upper Case for stlying.\n    // Paramteres: None.\n    //\n    // Returns: HTML table header.\n    const renderHeader = () => {\n        let headerElement = ['name', 'bundle']\n\n        return headerElement.map((key, index) => {\n            return <th key={index}>{key.toUpperCase()}</th>\n        })\n    }\n\n    // Function to build the table. Uses the bundles variable that contains the bundle data from DB. Add valid rows to .map() for more table cells. \n    // Paramteres: None, but uses bundles variable.\n    //\n    // Returns: HTML table.\n    const renderBody = () => {\n        return bundles && bundles.map(({ id, name, bundle }) => {\n            return (\n                <tr key={id}>\n                    <td>{name}</td>\n                    <td>{bundle}</td> \n                </tr>\n            )\n        })\n    }\n\n    // Return the table. Table building.\n    return (\n        <div class=\"bundlesdiv\">\n            <h1 id='title'>Bundles Table</h1>\n            <table id='bundles' class=\"striped centered responsive-table\">\n                <thead>\n                    <tr>{renderHeader()}</tr>\n                </thead>\n                <tbody>\n                    {renderBody()}\n                </tbody>\n            </table>\n        </div>\n        )\n    }\n\n  "]},"metadata":{},"sourceType":"module"}